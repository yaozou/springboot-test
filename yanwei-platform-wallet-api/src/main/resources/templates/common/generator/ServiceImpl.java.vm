package ${package}.service.impl;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.yaozou.platform.common.page.Pagination;
import com.yaozou.platform.common.repository.CustomRepository;
import com.yaozou.platform.common.repository.jdbc.Finder;
import com.yaozou.platform.common.repository.jdbc.Updater;

import ${package}.model.${className}Entity;
import ${package}.service.I${className}Service;

/**
 * ${comments}
 * @author ${author}
 * @email ${email}
 * @version $Id: ${className}Service.java, v 0.1 ${datetime} ${author} Exp $
 */
@Service
@Transactional
public class ${className}Service implements I${className}Service {

    @Autowired
    private CustomRepository customRepository;

    @Override
    public ${className}Entity findById(${pk.attrType} ${pk.attrname}) {
        return customRepository.get(${className}Entity.class, ${pk.attrname});
    }

    @Override
    public ${className}Entity save(${className}Entity bean) {
        bean = customRepository.save(bean);
        return bean;
    }

    @Override
    public ${className}Entity update(${className}Entity bean) {
        Updater<${className}Entity> updater = new Updater<${className}Entity>(bean);
        ${className}Entity entity = customRepository.updateByUpdater(updater, ${className}Entity.class);
        return entity;
    }
    
    
   @Override
    public ${className}Entity deleteById(${pk.attrType} ${pk.attrname}) {
       ${className}Entity bean=findById(${pk.attrname});
      return customRepository.delete(bean);
    }

    @Override
    public Pagination<${className}Entity> getPage(${className}Entity bean, Integer pageNo,
                                                       Integer pageSize) {
                                                       
        String hql = "from ${className}Entity bean where 1=1 ";
        Finder f = Finder.create(hql);
        
        f.append(" order by createTime desc");
        return customRepository.find(f, pageNo, pageSize);
    }

}
